<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
  <data name="panel3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bqALuOmm/wOhX2EhyV/c3wAAAABJRU5ErkJggg==
</value>
  </data>
</root>